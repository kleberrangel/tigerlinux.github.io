
First list: [1, 4, 9, 16, 25, 36, 49]

First list: [1, 4, 9, 16, 25, 36, 49]

['#!/usr/bin/env python\n', '#\n', '# By Reynaldo R. Martinez P.\n', '# Sept 13, 2016\n', '# TigerLinux AT Gmail DOT Com\n', '# List Comprehensions\n', '#\n', '#\n', '\n', "# We'll need some functions from os library:\n", '\n', 'import os\n', '\n', 'print ("")\n', '\n', "# Let's play with list comprehensions\n", '\n', '# First sample. This generates a list of squared numbers using as}\n', '# base numbers 1 to 7\n', '\n', 'list1 = [ number ** 2 for number in [1,2,3,4,5,6,7]  ]\n', '\n', 'print ("First list: " + str(list1))\n', '\n', 'print ("")\n', '\n', '# Same, but combined with range:\n', '\n', 'list2 = [ number ** 2 for number in range(1,8) ]\n', '\n', 'print ("First list: " + str(list2))\n', '\n', 'print ("")\n', '\n', '# Another list, based on this script:\n', '\n', 'scriptname = "comprehensions.py"\n', '\n', 'list2 = [ line for line in open(scriptname,"r") ]\n', '\n', 'print (list2)\n', '\n', 'print ("")\n', '\n', '# Another one, with even more manipulation\n', '\n', 'list3 = [ line.rstrip().upper() for line in open(scriptname,"r") ]\n', '\n', 'print (list3)\n', '\n', 'print ("")\n', '\n', '# Like the last one, but ommiting all lines beggining with "#"\n', '\n', 'list4 = [ line.rstrip().upper() for line in open(scriptname,"r") if line[0] != "#" ]\n', '\n', 'print (list4)\n', '\n', 'print ("")\n', '\n', '# This like the last, but also removes blank lines\n', '\n', 'list5 = [ line.rstrip().upper() for line in open(scriptname,"r") if line[0] != "#" and line.strip() ]\n', '\n', 'print (list5)\n', '\n', '\n', 'print ("")\n', '\n', '# The next is a tipical permutation of string chars:\n', '\n', 'text1 = "kiki"\n', 'text2 = "rayita"\n', '\n', 'list6 = [ char1 + char2 for char1 in text1 for char2 in text2 ]\n', '\n', 'print (list6)\n', '\n', 'print ("")\n', '\n', '# And with numbers and operations:\n', '\n', 'numbers1 = [ 1, 2, 3, 4 ]\n', 'numbers2 = [ 1, 2, 3 ]\n', '\n', 'list7 = [ num1*num2 for num1 in numbers1 for num2 in numbers2 ]\n', '\n', 'print (list7)\n', '\n', 'print ("")\n', '\n', '# END\n']

['#!/USR/BIN/ENV PYTHON', '#', '# BY REYNALDO R. MARTINEZ P.', '# SEPT 13, 2016', '# TIGERLINUX AT GMAIL DOT COM', '# LIST COMPREHENSIONS', '#', '#', '', "# WE'LL NEED SOME FUNCTIONS FROM OS LIBRARY:", '', 'IMPORT OS', '', 'PRINT ("")', '', "# LET'S PLAY WITH LIST COMPREHENSIONS", '', '# FIRST SAMPLE. THIS GENERATES A LIST OF SQUARED NUMBERS USING AS}', '# BASE NUMBERS 1 TO 7', '', 'LIST1 = [ NUMBER ** 2 FOR NUMBER IN [1,2,3,4,5,6,7]  ]', '', 'PRINT ("FIRST LIST: " + STR(LIST1))', '', 'PRINT ("")', '', '# SAME, BUT COMBINED WITH RANGE:', '', 'LIST2 = [ NUMBER ** 2 FOR NUMBER IN RANGE(1,8) ]', '', 'PRINT ("FIRST LIST: " + STR(LIST2))', '', 'PRINT ("")', '', '# ANOTHER LIST, BASED ON THIS SCRIPT:', '', 'SCRIPTNAME = "COMPREHENSIONS.PY"', '', 'LIST2 = [ LINE FOR LINE IN OPEN(SCRIPTNAME,"R") ]', '', 'PRINT (LIST2)', '', 'PRINT ("")', '', '# ANOTHER ONE, WITH EVEN MORE MANIPULATION', '', 'LIST3 = [ LINE.RSTRIP().UPPER() FOR LINE IN OPEN(SCRIPTNAME,"R") ]', '', 'PRINT (LIST3)', '', 'PRINT ("")', '', '# LIKE THE LAST ONE, BUT OMMITING ALL LINES BEGGINING WITH "#"', '', 'LIST4 = [ LINE.RSTRIP().UPPER() FOR LINE IN OPEN(SCRIPTNAME,"R") IF LINE[0] != "#" ]', '', 'PRINT (LIST4)', '', 'PRINT ("")', '', '# THIS LIKE THE LAST, BUT ALSO REMOVES BLANK LINES', '', 'LIST5 = [ LINE.RSTRIP().UPPER() FOR LINE IN OPEN(SCRIPTNAME,"R") IF LINE[0] != "#" AND LINE.STRIP() ]', '', 'PRINT (LIST5)', '', '', 'PRINT ("")', '', '# THE NEXT IS A TIPICAL PERMUTATION OF STRING CHARS:', '', 'TEXT1 = "KIKI"', 'TEXT2 = "RAYITA"', '', 'LIST6 = [ CHAR1 + CHAR2 FOR CHAR1 IN TEXT1 FOR CHAR2 IN TEXT2 ]', '', 'PRINT (LIST6)', '', 'PRINT ("")', '', '# AND WITH NUMBERS AND OPERATIONS:', '', 'NUMBERS1 = [ 1, 2, 3, 4 ]', 'NUMBERS2 = [ 1, 2, 3 ]', '', 'LIST7 = [ NUM1*NUM2 FOR NUM1 IN NUMBERS1 FOR NUM2 IN NUMBERS2 ]', '', 'PRINT (LIST7)', '', 'PRINT ("")', '', '# END']

['', '', 'IMPORT OS', '', 'PRINT ("")', '', '', '', 'LIST1 = [ NUMBER ** 2 FOR NUMBER IN [1,2,3,4,5,6,7]  ]', '', 'PRINT ("FIRST LIST: " + STR(LIST1))', '', 'PRINT ("")', '', '', 'LIST2 = [ NUMBER ** 2 FOR NUMBER IN RANGE(1,8) ]', '', 'PRINT ("FIRST LIST: " + STR(LIST2))', '', 'PRINT ("")', '', '', 'SCRIPTNAME = "COMPREHENSIONS.PY"', '', 'LIST2 = [ LINE FOR LINE IN OPEN(SCRIPTNAME,"R") ]', '', 'PRINT (LIST2)', '', 'PRINT ("")', '', '', 'LIST3 = [ LINE.RSTRIP().UPPER() FOR LINE IN OPEN(SCRIPTNAME,"R") ]', '', 'PRINT (LIST3)', '', 'PRINT ("")', '', '', 'LIST4 = [ LINE.RSTRIP().UPPER() FOR LINE IN OPEN(SCRIPTNAME,"R") IF LINE[0] != "#" ]', '', 'PRINT (LIST4)', '', 'PRINT ("")', '', '', 'LIST5 = [ LINE.RSTRIP().UPPER() FOR LINE IN OPEN(SCRIPTNAME,"R") IF LINE[0] != "#" AND LINE.STRIP() ]', '', 'PRINT (LIST5)', '', '', 'PRINT ("")', '', '', 'TEXT1 = "KIKI"', 'TEXT2 = "RAYITA"', '', 'LIST6 = [ CHAR1 + CHAR2 FOR CHAR1 IN TEXT1 FOR CHAR2 IN TEXT2 ]', '', 'PRINT (LIST6)', '', 'PRINT ("")', '', '', 'NUMBERS1 = [ 1, 2, 3, 4 ]', 'NUMBERS2 = [ 1, 2, 3 ]', '', 'LIST7 = [ NUM1*NUM2 FOR NUM1 IN NUMBERS1 FOR NUM2 IN NUMBERS2 ]', '', 'PRINT (LIST7)', '', 'PRINT ("")', '']

['IMPORT OS', 'PRINT ("")', 'LIST1 = [ NUMBER ** 2 FOR NUMBER IN [1,2,3,4,5,6,7]  ]', 'PRINT ("FIRST LIST: " + STR(LIST1))', 'PRINT ("")', 'LIST2 = [ NUMBER ** 2 FOR NUMBER IN RANGE(1,8) ]', 'PRINT ("FIRST LIST: " + STR(LIST2))', 'PRINT ("")', 'SCRIPTNAME = "COMPREHENSIONS.PY"', 'LIST2 = [ LINE FOR LINE IN OPEN(SCRIPTNAME,"R") ]', 'PRINT (LIST2)', 'PRINT ("")', 'LIST3 = [ LINE.RSTRIP().UPPER() FOR LINE IN OPEN(SCRIPTNAME,"R") ]', 'PRINT (LIST3)', 'PRINT ("")', 'LIST4 = [ LINE.RSTRIP().UPPER() FOR LINE IN OPEN(SCRIPTNAME,"R") IF LINE[0] != "#" ]', 'PRINT (LIST4)', 'PRINT ("")', 'LIST5 = [ LINE.RSTRIP().UPPER() FOR LINE IN OPEN(SCRIPTNAME,"R") IF LINE[0] != "#" AND LINE.STRIP() ]', 'PRINT (LIST5)', 'PRINT ("")', 'TEXT1 = "KIKI"', 'TEXT2 = "RAYITA"', 'LIST6 = [ CHAR1 + CHAR2 FOR CHAR1 IN TEXT1 FOR CHAR2 IN TEXT2 ]', 'PRINT (LIST6)', 'PRINT ("")', 'NUMBERS1 = [ 1, 2, 3, 4 ]', 'NUMBERS2 = [ 1, 2, 3 ]', 'LIST7 = [ NUM1*NUM2 FOR NUM1 IN NUMBERS1 FOR NUM2 IN NUMBERS2 ]', 'PRINT (LIST7)', 'PRINT ("")']

['kr', 'ka', 'ky', 'ki', 'kt', 'ka', 'ir', 'ia', 'iy', 'ii', 'it', 'ia', 'kr', 'ka', 'ky', 'ki', 'kt', 'ka', 'ir', 'ia', 'iy', 'ii', 'it', 'ia']

[1, 2, 3, 2, 4, 6, 3, 6, 9, 4, 8, 12]

